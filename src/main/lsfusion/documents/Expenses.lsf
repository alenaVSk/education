MODULE Expenses;
// 1. Необходимые для работы модули
REQUIRE Documents, AppMenu, Organization, Reception, Utils;
// 2. Задаем общее пространство имен для всех документов
NAMESPACE Documents;
// 3. Наследуем класс заголовка расхода от класса Header
CLASS HeaderExpenses 'Расходы':Header;
// 3. Наследуем класс строки расхода от класса Row
CLASS Expenses 'Строки расходов':Row;
// 4. Добавляем свойства, которых нет в базовом классе
// так как товар и цена берутся из прихода, то нужна композиция
reception 'ID' = DATA Reception (Expenses) NONULL ;
price 'Цена' (Expenses o) = round(1.1 * price(reception(o)),2); // 1.1 - оптовая надбавка
// 4. Композиция
customer = DATA Organization (HeaderExpenses);
organizationName 'Покупатель' (HeaderExpenses o) = name(customer(o));
// 4. Новые свойства
nameProduct 'Наименование' (Expenses o) = nameProduct(reception(o));
nameUnit 'Ед. изм.' (Expenses o) = nameUnit(reception(o));
// 5. Контроль данных и вычисление остатка
allExpenses (Reception r) = GROUP SUM quantity(Expenses e) BY reception(e) MATERIALIZED;
balance 'Остаток' (Reception r) = quantity(r) (-) allExpenses(r);
CONSTRAINT balance(reception(Expenses o)) < 0 MESSAGE 'Расход превышает остаток';
CONSTRAINT SETCHANGED(customer(HeaderExpenses o)) AND NOT organizationType(customer(o)) =
    OrganizationType.customer
    CHECKED BY customer[HeaderExpenses] MESSAGE 'Для расходной накладной организация должна быть
покупателем';
// 6. Формы редактирования и отображения, дизайн, 7. меню
@forms(Expenses, 'Расход', 'Расходы', 'Покупатель'){
    // форма редактирования
    FORM editExpenses 'Расход'
        OBJECTS h = HeaderExpenses PANEL // редактирование заголовка
        PROPERTIES (h) number, date, organizationName
        OBJECTS r = Expenses // редактирование строк
        
        PROPERTIES (r) nameProduct, nameUnit, quantity, price
        PROPERTIES (r) NEW, DELETE
        EDIT HeaderExpenses OBJECT h
        FILTERS header(r) = h
    ;
    // подправляем заголовок свойства для разных форм редактирования
    DESIGN editExpenses { PROPERTY (organizationName(h)) {caption = 'Покупатель';} }
    // форма отображения
    FORM viewExpenses 'Расходы'
        OBJECTS h = HeaderExpenses LAST
        PROPERTIES (h) READONLY number, date, organizationName, userName, userDate
        PROPERTIES (h) NEWSESSION NEW, EDIT, DELETE
        OBJECTS r = Expenses
        PROPERTIES (r) READONLY nameProduct, nameUnit, quantity, price
        FILTERS header(r) = h
        ORDERS date(h), number(h)
    ;
    // панель кнопок редактирования шапки передвигаем в панель редактирования строк
    // и ограничиваем ширину колонки единиц измерения
    DESIGN viewExpenses {
        TOOLBARRIGHT (r) { MOVE TOOLBARRIGHT (h); }
        PROPERTY (nameUnit(r)) {charWidth=10;}
    }
    NAVIGATOR {
        documents {
            NEW FORM viewExpenses;
        }
    }
};
// 6. форма выбора остатков
FORM listReception 'Остатки'
    OBJECTS r = Reception
    PROPERTIES (r) READONLY nameProduct, nameUnit, price, quantity, balance
    LIST Reception OBJECT r
    FILTERS balance(r)
;
// ограничиваем ширину колонки ед. изм.
DESIGN listReception {PROPERTY (nameUnit(r)) {charWidth=10;} }

// Расчет итогов
@totalValues(Expenses){
    index 'Nпп' (Expenses r) = PARTITION SUM 1 ORDER r BY header(r) CHARWIDTH 3;
    cost 'Стоимость' (Expenses r) = NUMERIC[10,2](round(quantity(r) * price(r),2)); // по строке
    amount 'Сумма' (HeaderExpenses h) = GROUP SUM cost(Expenses r) IF header(r) = h;
    count 'Количество' (HeaderExpenses h) = GROUP SUM quantity(Expenses r) IF header(r) = h;
    cntpos 'Всего позиций' (HeaderExpenses h) = GROUP SUM 1 IF header(Expenses r) = h;
    amountDay 'Сумма' (HeaderExpenses h) = PARTITION SUM(amount(h)) BY date(h);
    
    // форма отображения
    EXTEND FORM viewExpenses
        PROPERTIES (h) READONLY amount AFTER organizationName(h)
        PROPERTIES (r) READONLY index FIRST, cost
        OBJECTS h2 = HeaderExpenses PANEL // информационное табло
        PROPERTIES(h2) READONLY amount, count, cntpos, amountDay, date
        FILTERS h2 = h;
    // исправляем дизайн: итоги по документу, итоги за день
    DESIGN viewExpenses {
        PANEL {
            NEW pane {
                horizontal = TRUE;
                fill = 1;
                NEW totalCurrent {
                    horizontal = TRUE;
                    caption = 'Итоги по документу';
                    MOVE PROPERTY (amount(h2)) { background = RGB(204, 204, 255); }
                    MOVE PROPERTY (count(h2)) { background = RGB(204, 204, 255); }
                    MOVE PROPERTY (cntpos(h2)) { background = RGB(204, 204, 255); }
                }
                NEW totalDay {
                    horizontal = TRUE;
                    caption = 'Итоги за день';
                    MOVE PROPERTY (date(h2)) { background = RGB(204, 255, 204); }
                    MOVE PROPERTY (amountDay(h2)) {
                        background = RGB(204, 255, 204);
                        marginLeft = 20;
                    }
                }
            }
        }
    }
};

// Расчет итогов со скидкой
costDiscount 'Стоимость со скидкой' (Expenses o) =
    round(cost(o) (-) (discount(customer(header(o)))/100) * cost(o),2);
amountDiscount 'Сумма со скидкой' (HeaderExpenses h) =
    GROUP SUM costDiscount(Expenses r) BY header(r);
amountDiscountDay 'Сумма со скидкой' (HeaderExpenses h) =
    PARTITION SUM(amountDiscount(h)) BY date(h);
EXTEND FORM viewExpenses
    PROPERTIES (h) READONLY amountDiscount AFTER amount(h)
    BACKGROUND RGB(255, 255, 204) IF discount(customer(h))
    PROPERTIES (h2) READONLY amountDiscount, amountDiscountDay
    PROPERTIES (r) costDiscount
;

DESIGN viewExpenses {
    totalCurrent {
        MOVE PROPERTY (amountDiscount(h2))
        AFTER PROPERTY (amount(h2)) { background = RGB(204, 204, 255); }
    }
    totalDay {
        MOVE PROPERTY (amountDiscountDay(h2))
        AFTER PROPERTY (amountDay(h2)) { background= RGB(204, 255, 204); }
    }
}

// Пользовательские фильтры
@filters(Expenses, customer, 'Покупатель'){
    fExpensesNumber
    'Номер' = DATA LOCAL STRING[10];
    fExpensesDate
    'Дата' = DATA LOCAL DATE;
    fExpensesAmount
    'Сумма' = DATA LOCAL INTEGER; // суммы без копеек
    customer 'ID организации' = DATA LOCAL Organization ();
    fcustomerName 'Покупатель' = name(customer());
    
    CONSTRAINT SETCHANGED(customer()) AND NOT organizationType(customer()) =
        OrganizationType.customer
        CHECKED BY customer[] MESSAGE 'Ограничение на тип организации';
    
    onExpensesClear 'Очистить' () {
        fExpensesNumber() <- NULL;
        fExpensesDate() <- NULL;
        fExpensesAmount() <- NULL;
        customer() <- NULL;
    }
    EXTEND FORM viewExpenses
        PROPERTIES() onExpensesClear, fExpensesNumber,
            fExpensesDate, fExpensesAmount, fcustomerName
        FILTERS NOT fExpensesNumber() OR number(h) = fExpensesNumber(),
            NOT fExpensesDate() OR date(h) = fExpensesDate(),
            NOT fExpensesAmount() OR floor(amount(h)) = fExpensesAmount(),
            NOT fcustomerName() OR organizationName(h) = fcustomerName()
    ;

    DESIGN viewExpenses {
        PANEL {
            NEW allPane {
                horizontal = FALSE ;
                tabbed = TRUE;
                MOVE pane {caption = 'Итоги';}
                NEW filters {
                    caption = 'Фиксированные фильтры';
                    horizontal = TRUE;
                    MOVE PROPERTY (onExpensesClear()) {background= RGB(204, 204, 255);};
                    MOVE PROPERTY (fExpensesNumber());
                    MOVE PROPERTY (fExpensesDate());
                    MOVE PROPERTY (fcustomerName());
                    MOVE PROPERTY (fExpensesAmount());
                }
            }
        }
    }
    // ФИЛЬТР по отмеченным
    EXTEND FORM viewExpenses PROPERTIES(h) mark FIRST;
    AFTER onExpensesClear() DO mark(HeaderExpenses o) <- NULL;

    // Группа фильтров
    EXTEND FORM viewExpenses FILTERGROUP group FILTER 'Отмеченные' mark(h);
    EXTEND FORM viewExpenses EXTEND FILTERGROUP group FILTER 'Больше 300 руб.' amount(h) > 300;
    DESIGN viewExpenses { filters { MOVE FILTERGROUP (group) LAST; } }
};

// ДОРАБОТКА: фильтр сумма со скидкой
fAmountDiscount 'Сумма со скидкой' = DATA LOCAL INTEGER;
AFTER onExpensesClear() DO { fAmountDiscount() <- NULL; }
EXTEND FORM viewExpenses
    PROPERTIES fAmountDiscount()
    FILTERS NOT fAmountDiscount() OR floor(amountDiscount(h)) = fAmountDiscount();
DESIGN viewExpenses {
    REMOVE PROPERTY (fExpensesAmount());
    filters {
        MOVE PROPERTY (fAmountDiscount());
    }
}
